#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.8.0
# from Racc grammar file "parser.racc".
#

require 'racc/parser.rb'

require File.dirname(__FILE__) + '/parser.rex.rb'

module SQLParser
  class Parser < Racc::Parser

module_eval(<<'...end parser.racc/module_eval...', 'parser.racc', 337)

def self.parse(sql)
  new.scan_str(sql)
end
...end parser.racc/module_eval...
##### State transition tables begin ###

racc_action_table = [
    44,   221,  -127,    28,    72,    67,    96,   108,     7,    14,
   232,     8,    70,    71,   131,     9,   233,    11,    44,    12,
    96,    28,   223,    53,   224,   225,    55,    69,    56,    69,
   191,    62,    18,  -127,  -127,  -127,    44,    73,    69,    28,
    47,    48,    44,    32,    45,    36,    38,    39,    40,    41,
    18,    49,    69,    52,    47,    48,    44,    87,    86,    28,
    65,    32,    45,    36,    38,    39,    40,    41,    18,    49,
    66,    52,   -83,    44,   136,   137,    47,    48,    77,    32,
    45,    36,    38,    39,    40,    41,    45,    49,    18,    52,
    78,    44,    79,    49,    28,    52,    47,    48,    80,    32,
    45,    36,    38,    39,    40,    41,    81,    49,    82,    52,
  -146,    44,    83,    84,    28,    85,    88,    45,    90,   111,
    62,    69,   119,    18,    49,    69,    52,   127,   132,   134,
   100,    47,    48,   141,    32,    45,    36,    38,    39,    40,
    41,    62,    49,    18,    52,    44,   143,   144,    28,   145,
   146,    47,    48,   147,    32,    45,    36,    38,    39,    40,
    41,    69,    49,    44,    52,   101,    28,   150,   171,    99,
   172,   173,   174,   100,   175,   176,   177,    18,   102,   179,
   104,   105,   180,   106,   107,    47,    48,    62,    32,    45,
    36,    38,    39,    40,    41,    18,    49,    44,    52,    62,
    28,   186,   187,    47,    48,   191,    32,    45,    36,    38,
    39,    40,    41,   203,    49,    44,    52,   206,    28,   209,
   210,    18,   220,   119,   121,   228,     8,   243,   191,    18,
   244,   206,   228,    44,   248,   250,    28,    47,    48,   191,
    32,    45,    36,    38,    39,    40,    41,    18,    49,    69,
    52,    44,    18,   255,    28,    47,    48,   257,    32,    45,
    36,    38,    39,    40,    41,    18,    49,   258,    52,    44,
   259,    69,    28,    47,    48,   nil,    32,    45,    36,    38,
    39,    40,    41,    18,    49,   nil,    52,    44,   nil,   nil,
    28,    47,    48,   nil,    32,    45,    36,    38,    39,    40,
    41,    18,    49,   nil,    52,   nil,   nil,   nil,   nil,    47,
    48,   nil,    32,    45,    36,    38,    39,    40,    41,    18,
    49,    44,    52,   nil,   151,   nil,   nil,    47,    48,   nil,
    32,    45,    36,    38,    39,    40,    41,   nil,    49,    44,
    52,   101,    28,   nil,   nil,   158,   nil,   nil,   nil,   nil,
   nil,   nil,   155,    18,   102,   nil,   104,   105,   nil,   106,
   107,    47,    48,   nil,    32,    45,    36,    38,    39,    40,
    41,    18,    49,    44,    52,   nil,   151,   nil,   nil,    47,
    48,     8,    32,    45,    36,    38,    39,    40,    41,   nil,
    49,   nil,    52,   nil,   nil,   nil,    44,   158,   nil,   151,
   nil,   nil,   nil,   nil,   155,    18,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    47,    48,   nil,    32,    45,    36,    38,
    39,    40,    41,   nil,    49,   nil,    52,   155,    18,    44,
   nil,   nil,    28,   nil,   nil,   nil,    47,    48,   nil,    32,
    45,    36,    38,    39,    40,    41,   nil,    49,   nil,    52,
   nil,   nil,   nil,   nil,   nil,    44,   nil,   nil,   151,   nil,
   nil,    18,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    47,
    48,   nil,    32,    45,    36,    38,    39,    40,    41,   158,
    49,    44,    52,   nil,   151,   nil,   155,    18,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    47,    48,   nil,    32,    45,
    36,    38,    39,    40,    41,   158,    49,    44,    52,   nil,
   226,   nil,   155,    18,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    47,    48,   nil,    32,    45,    36,    38,    39,    40,
    41,   nil,    49,    44,    52,   nil,   226,   nil,   nil,    18,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    47,    48,   nil,
    32,    45,    36,    38,    39,    40,    41,   nil,    49,    44,
    52,   nil,   226,   nil,   nil,    18,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    47,    48,   nil,    32,    45,    36,    38,
    39,    40,    41,   nil,    49,    44,    52,   nil,   226,   nil,
   nil,    18,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    47,
    48,   nil,    32,    45,    36,    38,    39,    40,    41,   nil,
    49,    44,    52,   nil,   226,   nil,   nil,    18,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    47,    48,   nil,    32,    45,
    36,    38,    39,    40,    41,   nil,    49,    44,    52,   nil,
   226,   nil,   nil,    18,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    47,    48,   nil,    32,    45,    36,    38,    39,    40,
    41,   nil,    49,    44,    52,   nil,   226,   nil,   nil,    18,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    47,    48,   nil,
    32,    45,    36,    38,    39,    40,    41,   nil,    49,    44,
    52,   nil,   226,   nil,   nil,    18,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    47,    48,   nil,    32,    45,    36,    38,
    39,    40,    41,   nil,    49,    44,    52,   nil,   151,   nil,
   nil,    18,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    47,
    48,   nil,    32,    45,    36,    38,    39,    40,    41,   158,
    49,    44,    52,   nil,    28,   nil,   155,    18,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    47,    48,   nil,    32,    45,
    36,    38,    39,    40,    41,   nil,    49,    44,    52,   nil,
   151,   nil,   nil,    18,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    47,    48,   nil,    32,    45,    36,    38,    39,    40,
    41,   158,    49,    44,    52,   nil,   226,   nil,   155,    18,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    47,    48,   nil,
    32,    45,    36,    38,    39,    40,    41,   nil,    49,    44,
    52,   nil,   226,   nil,   nil,    18,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    47,    48,   nil,    32,    45,    36,    38,
    39,    40,    41,   nil,    49,    44,    52,   nil,    28,   nil,
   nil,    18,   nil,     8,   nil,   nil,   nil,   nil,   nil,    47,
    48,   nil,    32,    45,    36,    38,    39,    40,    41,   nil,
    49,    44,    52,   nil,    28,   nil,   nil,    18,   nil,     8,
   nil,   nil,   nil,   nil,   nil,    47,    48,   nil,    32,    45,
    36,    38,    39,    40,    41,   nil,    49,    44,    52,   nil,
   226,   nil,   nil,    18,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    47,    48,   nil,    32,    45,    36,    38,    39,    40,
    41,   nil,    49,    44,    52,   nil,   226,   nil,   nil,    18,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    47,    48,   nil,
    32,    45,    36,    38,    39,    40,    41,   nil,    49,   nil,
    52,   nil,   nil,   nil,   nil,    18,   nil,   nil,   nil,   nil,
   nil,   nil,   101,    47,    48,   nil,    32,    45,    36,    38,
    39,    40,    41,   nil,    49,   102,    52,   104,   105,   nil,
   106,   107,   214,   215,   192,   193,   nil,   194,   195,   196,
   nil,   nil,   nil,   nil,   197,   198,   199,   200,   201,   202 ]

racc_action_check = [
     8,   189,    20,     8,    22,    17,    56,    58,     0,     8,
   196,     0,    21,    21,    85,     1,   196,     5,    23,     7,
   134,    23,   192,     9,   192,   192,    10,    17,    11,    58,
   189,    12,     8,    20,    20,    20,    28,    22,    56,    28,
     8,     8,    55,     8,     8,     8,     8,     8,     8,     8,
    23,     8,   134,     8,    85,    85,    66,    49,    49,    66,
    13,    23,    23,    23,    23,    23,    23,    23,    28,    23,
    16,    23,    18,    90,    94,    94,    28,    28,    33,    28,
    28,    28,    28,    28,    28,    28,    55,    28,    66,    28,
    36,    70,    38,    55,    70,    55,    66,    66,    39,    66,
    66,    66,    66,    66,    66,    66,    40,    66,    41,    66,
    42,    71,    44,    45,    71,    46,    52,    90,    54,    64,
    65,    67,    76,    70,    90,    77,    90,    83,    86,    92,
    98,    70,    70,   100,    70,    70,    70,    70,    70,    70,
    70,   101,    70,    71,    70,    72,   102,   103,    72,   105,
   106,    71,    71,   107,    71,    71,    71,    71,    71,    71,
    71,   108,    71,    73,    71,    57,    73,   110,   121,    57,
   122,   123,   124,    57,   125,   126,   130,    72,    57,   139,
    57,    57,   140,    57,    57,    72,    72,   143,    72,    72,
    72,    72,    72,    72,    72,    73,    72,    79,    72,   144,
    79,   149,   150,    73,    73,   152,    73,    73,    73,    73,
    73,    73,    73,   155,    73,    78,    73,   156,    78,   181,
   182,   187,   188,   190,    78,   194,   203,   215,   216,    79,
   217,   222,   224,    80,   227,   232,    80,    79,    79,   242,
    79,    79,    79,    79,    79,    79,    79,    78,    79,   243,
    79,    81,   244,   245,    81,    78,    78,   249,    78,    78,
    78,    78,    78,    78,    78,    80,    78,   251,    78,    82,
   252,   259,    82,    80,    80,   nil,    80,    80,    80,    80,
    80,    80,    80,    81,    80,   nil,    80,    99,   nil,   nil,
    99,    81,    81,   nil,    81,    81,    81,    81,    81,    81,
    81,    82,    81,   nil,    81,   nil,   nil,   nil,   nil,    82,
    82,   nil,    82,    82,    82,    82,    82,    82,    82,    99,
    82,   111,    82,   nil,   111,   nil,   nil,    99,    99,   nil,
    99,    99,    99,    99,    99,    99,    99,   nil,    99,   141,
    99,   112,   141,   nil,   nil,   111,   nil,   nil,   nil,   nil,
   nil,   nil,   111,   111,   112,   nil,   112,   112,   nil,   112,
   112,   111,   111,   nil,   111,   111,   111,   111,   111,   111,
   111,   141,   111,   151,   111,   nil,   151,   nil,   nil,   141,
   141,   151,   141,   141,   141,   141,   141,   141,   141,   nil,
   141,   nil,   141,   nil,   nil,   nil,   158,   151,   nil,   158,
   nil,   nil,   nil,   nil,   151,   151,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   151,   151,   nil,   151,   151,   151,   151,
   151,   151,   151,   nil,   151,   nil,   151,   158,   158,   180,
   nil,   nil,   180,   nil,   nil,   nil,   158,   158,   nil,   158,
   158,   158,   158,   158,   158,   158,   nil,   158,   nil,   158,
   nil,   nil,   nil,   nil,   nil,   186,   nil,   nil,   186,   nil,
   nil,   180,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   180,
   180,   nil,   180,   180,   180,   180,   180,   180,   180,   186,
   180,   191,   180,   nil,   191,   nil,   186,   186,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   186,   186,   nil,   186,   186,
   186,   186,   186,   186,   186,   191,   186,   193,   186,   nil,
   193,   nil,   191,   191,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   191,   191,   nil,   191,   191,   191,   191,   191,   191,
   191,   nil,   191,   195,   191,   nil,   195,   nil,   nil,   193,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   193,   193,   nil,
   193,   193,   193,   193,   193,   193,   193,   nil,   193,   197,
   193,   nil,   197,   nil,   nil,   195,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   195,   195,   nil,   195,   195,   195,   195,
   195,   195,   195,   nil,   195,   198,   195,   nil,   198,   nil,
   nil,   197,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   197,
   197,   nil,   197,   197,   197,   197,   197,   197,   197,   nil,
   197,   199,   197,   nil,   199,   nil,   nil,   198,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   198,   198,   nil,   198,   198,
   198,   198,   198,   198,   198,   nil,   198,   200,   198,   nil,
   200,   nil,   nil,   199,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   199,   199,   nil,   199,   199,   199,   199,   199,   199,
   199,   nil,   199,   201,   199,   nil,   201,   nil,   nil,   200,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   200,   200,   nil,
   200,   200,   200,   200,   200,   200,   200,   nil,   200,   202,
   200,   nil,   202,   nil,   nil,   201,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   201,   201,   nil,   201,   201,   201,   201,
   201,   201,   201,   nil,   201,   206,   201,   nil,   206,   nil,
   nil,   202,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   202,
   202,   nil,   202,   202,   202,   202,   202,   202,   202,   206,
   202,   210,   202,   nil,   210,   nil,   206,   206,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   206,   206,   nil,   206,   206,
   206,   206,   206,   206,   206,   nil,   206,   214,   206,   nil,
   214,   nil,   nil,   210,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   210,   210,   nil,   210,   210,   210,   210,   210,   210,
   210,   214,   210,   223,   210,   nil,   223,   nil,   214,   214,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   214,   214,   nil,
   214,   214,   214,   214,   214,   214,   214,   nil,   214,   225,
   214,   nil,   225,   nil,   nil,   223,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   223,   223,   nil,   223,   223,   223,   223,
   223,   223,   223,   nil,   223,   226,   223,   nil,   226,   nil,
   nil,   225,   nil,   226,   nil,   nil,   nil,   nil,   nil,   225,
   225,   nil,   225,   225,   225,   225,   225,   225,   225,   nil,
   225,   228,   225,   nil,   228,   nil,   nil,   226,   nil,   228,
   nil,   nil,   nil,   nil,   nil,   226,   226,   nil,   226,   226,
   226,   226,   226,   226,   226,   nil,   226,   248,   226,   nil,
   248,   nil,   nil,   228,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   228,   228,   nil,   228,   228,   228,   228,   228,   228,
   228,   nil,   228,   255,   228,   nil,   255,   nil,   nil,   248,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   248,   248,   nil,
   248,   248,   248,   248,   248,   248,   248,   nil,   248,   nil,
   248,   nil,   nil,   nil,   nil,   255,   nil,   nil,   nil,   nil,
   nil,   nil,   184,   255,   255,   nil,   255,   255,   255,   255,
   255,   255,   255,   nil,   255,   184,   255,   184,   184,   nil,
   184,   184,   184,   184,   154,   154,   nil,   154,   154,   154,
   nil,   nil,   nil,   nil,   154,   154,   154,   154,   154,   154 ]

racc_action_pointer = [
    -4,    15,   nil,   nil,   nil,    13,   nil,     6,    -7,    23,
    24,    23,    -8,    42,   nil,   nil,    64,   -12,    21,   nil,
   -14,   -35,   -12,    11,   nil,   nil,   nil,   nil,    29,   nil,
   nil,   nil,   nil,    27,   nil,   nil,    80,   nil,    82,    88,
    96,    98,    53,   nil,    61,   106,    58,   nil,   nil,    -1,
   nil,   nil,    55,   nil,   115,    35,    -1,   159,   -10,   nil,
   nil,   nil,   nil,   nil,    91,    81,    49,    82,   nil,   nil,
    84,   104,   138,   156,   nil,   nil,   111,    86,   208,   190,
   226,   244,   262,   120,   nil,     7,    70,   nil,   nil,   nil,
    66,   nil,   123,   nil,    66,   nil,   nil,   nil,   116,   280,
   123,   102,   126,   127,   nil,   126,   127,   130,   122,   nil,
   138,   314,   335,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   157,   159,   160,   161,   163,   164,   nil,   nil,   nil,
   169,   nil,   nil,   nil,    13,   nil,   nil,   nil,   nil,   168,
   176,   332,   nil,   148,   160,   nil,   nil,   nil,   nil,   171,
   197,   366,   165,   nil,   953,   203,   184,   nil,   389,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   422,   208,   214,   nil,   956,   nil,   448,   182,   211,   -10,
   212,   474,   -10,   500,   215,   526,   -21,   552,   578,   604,
   630,   656,   682,   211,   nil,   nil,   708,   nil,   nil,   nil,
   734,   nil,   nil,   nil,   760,   217,   188,   224,   nil,   nil,
   nil,   nil,   198,   786,   222,   812,   838,   201,   864,   nil,
   nil,   nil,   198,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   199,   210,   213,   220,   nil,   nil,   890,   246,
   nil,   256,   264,   nil,   nil,   916,   nil,   nil,   nil,   232,
   nil,   nil ]

racc_action_default = [
  -158,  -158,    -1,    -2,    -3,    -9,   -20,  -158,  -158,  -158,
    -5,  -158,  -158,   -28,   -29,   -30,   -32,   -35,  -152,  -110,
  -111,  -114,  -117,  -158,  -119,  -120,  -121,  -122,  -158,  -124,
  -125,  -126,  -128,  -158,  -130,  -131,  -158,  -133,  -158,  -158,
  -158,  -158,  -139,  -140,  -144,  -158,  -158,  -150,  -151,  -158,
  -155,  -156,  -158,   262,    -7,  -158,  -158,  -158,   -40,   -41,
   -43,   -44,   -83,   -27,   -60,  -158,  -158,  -158,   -34,  -152,
  -158,  -158,  -158,  -158,  -118,  -127,  -158,  -158,  -158,  -158,
  -158,  -158,  -158,  -142,  -143,  -158,  -158,  -154,  -157,    -4,
  -158,    -6,   -10,   -12,   -16,   -14,   -15,   -21,  -158,  -158,
  -158,  -158,  -158,  -158,   -48,   -50,   -52,   -53,  -158,   -39,
   -62,  -158,   -37,   -31,   -33,  -112,  -113,  -115,  -116,  -123,
  -129,  -158,  -158,  -158,  -158,  -158,  -158,  -141,  -145,  -147,
  -158,  -149,  -153,    -8,  -158,   -13,   -17,   -18,   -22,  -158,
   -25,  -158,   -45,  -158,  -158,   -49,   -51,   -54,   -38,   -67,
  -158,  -158,   -61,   -69,  -158,  -158,   -86,   -88,  -158,   -91,
   -92,   -93,   -95,   -96,   -97,   -98,   -99,  -100,  -107,  -108,
  -109,  -132,  -134,  -135,  -136,  -137,  -138,  -148,   -11,   -23,
  -158,  -158,   -77,   -46,  -158,   -36,  -158,  -158,  -158,  -158,
  -109,  -158,  -158,  -158,  -158,  -158,  -158,  -158,  -158,  -158,
  -158,  -158,  -158,  -158,   -42,   -82,  -158,   -90,   -24,   -26,
  -158,   -47,   -55,   -56,  -158,  -158,   -68,   -63,   -65,   -66,
   -19,   -94,   -87,  -158,  -158,  -158,  -158,  -158,  -158,   -73,
   -74,   -79,  -158,   -81,  -101,  -102,  -103,  -104,  -105,  -106,
   -89,   -76,   -57,  -158,  -158,  -158,   -72,   -78,  -158,  -158,
   -80,  -158,   -59,   -85,   -64,  -158,   -71,   -75,   -58,  -158,
   -70,   -84 ]

racc_goto_table = [
    68,    17,   152,    57,   139,    58,    93,   204,    15,   181,
   218,   219,    97,    91,   229,    75,   115,   116,   117,   118,
     1,    76,     2,     3,     4,   227,     5,   231,    10,   234,
   235,   236,   237,   238,   239,    54,    89,    92,   135,    95,
    98,   109,   189,    13,   246,    63,   204,    75,   133,    64,
   114,   110,   149,   138,   185,   245,   112,   247,    58,    17,
   120,   205,    75,    75,    75,    75,   113,   254,   219,   211,
   212,   122,   123,   124,   125,   126,   204,   216,   241,   213,
   256,   251,    75,   252,   178,   208,   217,   260,   222,   240,
   207,   148,   140,   130,   142,    74,   249,   128,   129,   nil,
   nil,   nil,   nil,   nil,   nil,   242,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    95,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   182,   184,   183,    58,   nil,   nil,
   nil,   nil,   nil,   nil,   190,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   140,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   182,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    76,
   nil,   182,   nil,   nil,   nil,   nil,   253,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   261 ]

racc_goto_check = [
    14,    21,    40,    17,    20,    31,    11,    15,    25,    22,
    44,    45,    18,     9,    50,    62,    61,    61,    63,    63,
     1,    21,     2,     3,     4,    48,     5,    48,     6,    48,
    48,    48,    48,    48,    48,     7,     8,    10,    13,    14,
    19,    14,    40,    23,    50,    24,    15,    62,     9,    27,
    14,    28,    29,    18,    30,    48,    17,    48,    31,    21,
    14,    33,    62,    62,    62,    62,    25,    44,    45,    37,
    38,    21,    21,    21,    21,    21,    15,    40,    22,    39,
    48,    41,    62,    42,    11,    20,    43,    48,    54,    55,
    56,    14,    21,    65,    31,    66,    22,    76,    77,   nil,
   nil,   nil,   nil,   nil,   nil,    40,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    14,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    21,    17,    31,    31,   nil,   nil,
   nil,   nil,   nil,   nil,    21,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    21,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    21,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    21,
   nil,    21,   nil,   nil,   nil,   nil,    14,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    14 ]

racc_goto_pointer = [
   nil,    20,    22,    23,    24,    26,    23,    25,   -18,   -42,
   -19,   -50,   nil,   -56,   -17,  -148,   nil,    -9,   -45,   -17,
   -95,    -7,  -132,    35,    32,     0,   nil,    36,   -13,   -58,
   -95,    -7,   nil,   -94,   nil,   nil,   nil,  -115,  -114,  -105,
  -109,  -162,  -160,  -101,  -177,  -176,   nil,   nil,  -168,   nil,
  -180,   nil,   nil,   nil,  -103,  -117,   -68,   nil,   nil,   nil,
   nil,   -54,    -8,   -54,   nil,     8,    72,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    12,    13,   nil,   nil ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,   188,   nil,   nil,   nil,    29,
   nil,   nil,    94,   nil,    34,   153,     6,   nil,   nil,   nil,
   nil,   170,   nil,   nil,   nil,   nil,    16,   nil,   nil,   nil,
   nil,    35,    59,   230,    60,    61,   103,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    26,   169,   163,   154,   164,
   nil,   165,   166,   167,   156,   157,   159,   160,   161,   162,
   168,    19,    20,    21,    22,    23,    24,    25,    27,    30,
    31,    33,    37,    42,    43,    46,   nil,   nil,    50,    51 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 63, :_reduce_none,
  1, 64, :_reduce_none,
  1, 64, :_reduce_none,
  4, 65, :_reduce_4,
  0, 69, :_reduce_none,
  2, 69, :_reduce_6,
  0, 70, :_reduce_none,
  2, 70, :_reduce_8,
  0, 68, :_reduce_none,
  3, 68, :_reduce_10,
  3, 72, :_reduce_11,
  1, 72, :_reduce_none,
  2, 73, :_reduce_13,
  1, 74, :_reduce_none,
  1, 74, :_reduce_15,
  0, 75, :_reduce_16,
  1, 75, :_reduce_17,
  1, 75, :_reduce_18,
  3, 77, :_reduce_19,
  1, 67, :_reduce_none,
  4, 66, :_reduce_21,
  5, 66, :_reduce_22,
  3, 81, :_reduce_23,
  3, 82, :_reduce_24,
  1, 82, :_reduce_none,
  4, 80, :_reduce_26,
  3, 78, :_reduce_27,
  2, 78, :_reduce_28,
  1, 85, :_reduce_29,
  1, 85, :_reduce_30,
  3, 87, :_reduce_31,
  1, 87, :_reduce_none,
  3, 88, :_reduce_33,
  2, 88, :_reduce_34,
  1, 88, :_reduce_none,
  4, 86, :_reduce_36,
  2, 89, :_reduce_37,
  3, 79, :_reduce_38,
  2, 79, :_reduce_39,
  1, 79, :_reduce_none,
  1, 79, :_reduce_none,
  1, 95, :_reduce_none,
  1, 94, :_reduce_none,
  1, 94, :_reduce_none,
  3, 96, :_reduce_45,
  4, 96, :_reduce_46,
  5, 97, :_reduce_47,
  1, 98, :_reduce_48,
  2, 98, :_reduce_49,
  1, 98, :_reduce_50,
  2, 98, :_reduce_51,
  1, 98, :_reduce_52,
  1, 98, :_reduce_53,
  2, 98, :_reduce_54,
  1, 99, :_reduce_none,
  1, 99, :_reduce_none,
  2, 100, :_reduce_57,
  4, 101, :_reduce_58,
  1, 103, :_reduce_none,
  0, 90, :_reduce_none,
  2, 90, :_reduce_61,
  0, 91, :_reduce_none,
  3, 91, :_reduce_63,
  3, 105, :_reduce_64,
  1, 105, :_reduce_none,
  1, 106, :_reduce_none,
  0, 92, :_reduce_none,
  2, 92, :_reduce_68,
  1, 108, :_reduce_none,
  6, 109, :_reduce_70,
  5, 109, :_reduce_71,
  4, 111, :_reduce_72,
  3, 111, :_reduce_73,
  1, 112, :_reduce_none,
  3, 112, :_reduce_75,
  3, 84, :_reduce_76,
  1, 84, :_reduce_none,
  4, 113, :_reduce_78,
  3, 113, :_reduce_79,
  4, 114, :_reduce_80,
  3, 114, :_reduce_81,
  2, 115, :_reduce_82,
  1, 93, :_reduce_83,
  3, 104, :_reduce_84,
  1, 104, :_reduce_none,
  1, 102, :_reduce_none,
  3, 102, :_reduce_87,
  1, 116, :_reduce_none,
  3, 116, :_reduce_89,
  2, 117, :_reduce_90,
  1, 117, :_reduce_none,
  1, 118, :_reduce_none,
  1, 119, :_reduce_none,
  3, 119, :_reduce_94,
  1, 120, :_reduce_none,
  1, 120, :_reduce_none,
  1, 120, :_reduce_none,
  1, 120, :_reduce_none,
  1, 120, :_reduce_none,
  1, 120, :_reduce_none,
  3, 121, :_reduce_101,
  3, 121, :_reduce_102,
  3, 121, :_reduce_103,
  3, 121, :_reduce_104,
  3, 121, :_reduce_105,
  3, 121, :_reduce_106,
  1, 110, :_reduce_none,
  1, 110, :_reduce_none,
  1, 122, :_reduce_none,
  1, 83, :_reduce_none,
  1, 83, :_reduce_none,
  3, 123, :_reduce_112,
  3, 123, :_reduce_113,
  1, 123, :_reduce_none,
  3, 125, :_reduce_115,
  3, 125, :_reduce_116,
  1, 125, :_reduce_none,
  2, 126, :_reduce_118,
  1, 126, :_reduce_none,
  1, 128, :_reduce_none,
  1, 128, :_reduce_none,
  1, 128, :_reduce_none,
  3, 128, :_reduce_123,
  1, 129, :_reduce_none,
  1, 129, :_reduce_none,
  1, 71, :_reduce_none,
  1, 71, :_reduce_none,
  1, 131, :_reduce_128,
  3, 107, :_reduce_129,
  1, 107, :_reduce_none,
  1, 133, :_reduce_none,
  4, 130, :_reduce_132,
  1, 130, :_reduce_none,
  4, 134, :_reduce_134,
  4, 134, :_reduce_135,
  4, 134, :_reduce_136,
  4, 134, :_reduce_137,
  4, 134, :_reduce_138,
  1, 132, :_reduce_none,
  1, 132, :_reduce_none,
  3, 135, :_reduce_141,
  2, 135, :_reduce_142,
  2, 135, :_reduce_143,
  1, 135, :_reduce_144,
  3, 136, :_reduce_145,
  1, 137, :_reduce_none,
  1, 138, :_reduce_none,
  2, 139, :_reduce_148,
  1, 139, :_reduce_149,
  1, 127, :_reduce_150,
  1, 127, :_reduce_151,
  1, 76, :_reduce_152,
  3, 124, :_reduce_153,
  2, 124, :_reduce_154,
  1, 124, :_reduce_none,
  1, 140, :_reduce_none,
  2, 141, :_reduce_157 ]

racc_reduce_n = 158

racc_shift_n = 262

racc_token_table = {
  false => 0,
  :error => 1,
  :RSLEEP => 2,
  :RSPEED => 3,
  :ORDER => 4,
  :BY => 5,
  :comma => 6,
  :unsigned_integer => 7,
  :ASC => 8,
  :DESC => 9,
  :left_paren => 10,
  :right_paren => 11,
  :INSERT => 12,
  :INTO => 13,
  :VALUES => 14,
  :SELECT => 15,
  :asterisk => 16,
  :AS => 17,
  :FROM => 18,
  :CROSS => 19,
  :JOIN => 20,
  :INNER => 21,
  :LEFT => 22,
  :OUTER => 23,
  :RIGHT => 24,
  :FULL => 25,
  :ON => 26,
  :USING => 27,
  :WHERE => 28,
  :GROUP => 29,
  :HAVING => 30,
  :NOT => 31,
  :BETWEEN => 32,
  :AND => 33,
  :IN => 34,
  :LIKE => 35,
  :IS => 36,
  :NULL => 37,
  :EXISTS => 38,
  :identifier => 39,
  :OR => 40,
  :equals_operator => 41,
  :not_equals_operator => 42,
  :less_than_operator => 43,
  :greater_than_operator => 44,
  :less_than_or_equals_operator => 45,
  :greater_than_or_equals_operator => 46,
  :plus_sign => 47,
  :minus_sign => 48,
  :solidus => 49,
  :CURRENT_USER => 50,
  :period => 51,
  :COUNT => 52,
  :AVG => 53,
  :MAX => 54,
  :MIN => 55,
  :SUM => 56,
  :E => 57,
  :quote => 58,
  :character_string_literal => 59,
  :DATE => 60,
  :date_string => 61 }

racc_nt_base = 62

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]
Ractor.make_shareable(Racc_arg) if defined?(Ractor)

Racc_token_to_s_table = [
  "$end",
  "error",
  "RSLEEP",
  "RSPEED",
  "ORDER",
  "BY",
  "comma",
  "unsigned_integer",
  "ASC",
  "DESC",
  "left_paren",
  "right_paren",
  "INSERT",
  "INTO",
  "VALUES",
  "SELECT",
  "asterisk",
  "AS",
  "FROM",
  "CROSS",
  "JOIN",
  "INNER",
  "LEFT",
  "OUTER",
  "RIGHT",
  "FULL",
  "ON",
  "USING",
  "WHERE",
  "GROUP",
  "HAVING",
  "NOT",
  "BETWEEN",
  "AND",
  "IN",
  "LIKE",
  "IS",
  "NULL",
  "EXISTS",
  "identifier",
  "OR",
  "equals_operator",
  "not_equals_operator",
  "less_than_operator",
  "greater_than_operator",
  "less_than_or_equals_operator",
  "greater_than_or_equals_operator",
  "plus_sign",
  "minus_sign",
  "solidus",
  "CURRENT_USER",
  "period",
  "COUNT",
  "AVG",
  "MAX",
  "MIN",
  "SUM",
  "E",
  "quote",
  "character_string_literal",
  "DATE",
  "date_string",
  "$start",
  "direct_sql_statement",
  "direct_sql_data_statement",
  "direct_select_statement_multiple_rows",
  "insert_specification",
  "query_expression",
  "order_by_clause",
  "rsleep_clause",
  "rspeed_clause",
  "unsigned_literal",
  "sort_specification_list",
  "sort_specification",
  "sort_key",
  "ordering_specification",
  "column_name",
  "subquery",
  "query_specification",
  "table_reference",
  "value_list",
  "column_list",
  "in_column_list",
  "value_expression",
  "in_value_list",
  "select_list",
  "table_expression",
  "select_sublist",
  "derived_column",
  "from_clause",
  "where_clause",
  "group_by_clause",
  "having_clause",
  "table_name",
  "joined_table",
  "table_subquery",
  "cross_join",
  "qualified_join",
  "join_type",
  "join_specification",
  "join_condition",
  "named_columns_join",
  "search_condition",
  "join_column_list",
  "column_name_list",
  "grouping_column_reference_list",
  "grouping_column_reference",
  "column_reference",
  "row_subquery",
  "between_predicate",
  "row_value_constructor",
  "in_predicate",
  "in_predicate_value",
  "like_predicate",
  "null_predicate",
  "exists_predicate",
  "boolean_term",
  "boolean_factor",
  "boolean_test",
  "boolean_primary",
  "predicate",
  "comparison_predicate",
  "row_value_constructor_element",
  "numeric_value_expression",
  "general_literal",
  "term",
  "factor",
  "sign",
  "value_expression_primary",
  "unsigned_value_specification",
  "set_function_specification",
  "general_value_specification",
  "unsigned_numeric_literal",
  "qualifier",
  "general_set_function",
  "exact_numeric_literal",
  "approximate_numeric_literal",
  "mantissa",
  "exponent",
  "signed_integer",
  "datetime_literal",
  "date_literal" ]
Ractor.make_shareable(Racc_token_to_s_table) if defined?(Ractor)

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

# reduce 2 omitted

# reduce 3 omitted

module_eval(<<'.,.,', 'parser.racc', 13)
  def _reduce_4(val, _values, result)
     result = SQLParser::Statement::DirectSelect.new(val[0], val[1], val[2], val[3])
    result
  end
.,.,

# reduce 5 omitted

module_eval(<<'.,.,', 'parser.racc', 18)
  def _reduce_6(val, _values, result)
     result = SQLParser::Statement::Rsleep.new(val[1])
    result
  end
.,.,

# reduce 7 omitted

module_eval(<<'.,.,', 'parser.racc', 22)
  def _reduce_8(val, _values, result)
     result = SQLParser::Statement::Rspeed.new(val[1])
    result
  end
.,.,

# reduce 9 omitted

module_eval(<<'.,.,', 'parser.racc', 26)
  def _reduce_10(val, _values, result)
     result = SQLParser::Statement::OrderBy.new(val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 29)
  def _reduce_11(val, _values, result)
     result = Array(val[0]) + Array(val[2])
    result
  end
.,.,

# reduce 12 omitted

module_eval(<<'.,.,', 'parser.racc', 33)
  def _reduce_13(val, _values, result)
     result = val[1].new(val[0])
    result
  end
.,.,

# reduce 14 omitted

module_eval(<<'.,.,', 'parser.racc', 37)
  def _reduce_15(val, _values, result)
     result = SQLParser::Statement::Integer.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 40)
  def _reduce_16(val, _values, result)
     result = SQLParser::Statement::Ascending
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 41)
  def _reduce_17(val, _values, result)
     result = SQLParser::Statement::Ascending
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 42)
  def _reduce_18(val, _values, result)
     result = SQLParser::Statement::Descending
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 47)
  def _reduce_19(val, _values, result)
     result = SQLParser::Statement::Subquery.new(val[1])
    result
  end
.,.,

# reduce 20 omitted

module_eval(<<'.,.,', 'parser.racc', 53)
  def _reduce_21(val, _values, result)
     result = SQLParser::Statement::Insert.new(val[2], nil, val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 54)
  def _reduce_22(val, _values, result)
     result = SQLParser::Statement::Insert.new(val[2], val[3], val[4])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 57)
  def _reduce_23(val, _values, result)
     result = SQLParser::Statement::InColumnList.new(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 60)
  def _reduce_24(val, _values, result)
     result = Array(val[0]) + Array(val[2])
    result
  end
.,.,

# reduce 25 omitted

module_eval(<<'.,.,', 'parser.racc', 64)
  def _reduce_26(val, _values, result)
     result = SQLParser::Statement::InValueList.new(val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 67)
  def _reduce_27(val, _values, result)
     result = SQLParser::Statement::Select.new(val[1], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 68)
  def _reduce_28(val, _values, result)
     result = SQLParser::Statement::Select.new(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 71)
  def _reduce_29(val, _values, result)
     result = SQLParser::Statement::All.new
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 72)
  def _reduce_30(val, _values, result)
     result = SQLParser::Statement::SelectList.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 75)
  def _reduce_31(val, _values, result)
     result = Array(val[0]) + Array(val[2])
    result
  end
.,.,

# reduce 32 omitted

module_eval(<<'.,.,', 'parser.racc', 79)
  def _reduce_33(val, _values, result)
     result = SQLParser::Statement::As.new(val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 80)
  def _reduce_34(val, _values, result)
     result = SQLParser::Statement::As.new(val[0], val[1])
    result
  end
.,.,

# reduce 35 omitted

module_eval(<<'.,.,', 'parser.racc', 84)
  def _reduce_36(val, _values, result)
     result = SQLParser::Statement::TableExpression.new(val[0], val[1], val[2], val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 87)
  def _reduce_37(val, _values, result)
     result = SQLParser::Statement::FromClause.new(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 90)
  def _reduce_38(val, _values, result)
     result = SQLParser::Statement::As.new(val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 91)
  def _reduce_39(val, _values, result)
     result = SQLParser::Statement::As.new(val[0], val[1])
    result
  end
.,.,

# reduce 40 omitted

# reduce 41 omitted

# reduce 42 omitted

# reduce 43 omitted

# reduce 44 omitted

module_eval(<<'.,.,', 'parser.racc', 103)
  def _reduce_45(val, _values, result)
     result = SQLParser::Statement::CrossJoin.new(val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 104)
  def _reduce_46(val, _values, result)
     result = SQLParser::Statement::CrossJoin.new(val[0], val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 107)
  def _reduce_47(val, _values, result)
     result = val[1].new(val[0], val[3], val[4])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 110)
  def _reduce_48(val, _values, result)
     result = SQLParser::Statement::InnerJoin
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 111)
  def _reduce_49(val, _values, result)
     result = SQLParser::Statement::LeftOuterJoin
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 112)
  def _reduce_50(val, _values, result)
     result = SQLParser::Statement::LeftJoin
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 113)
  def _reduce_51(val, _values, result)
     result = SQLParser::Statement::RightOuterJoin
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 114)
  def _reduce_52(val, _values, result)
     result = SQLParser::Statement::RightJoin
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 115)
  def _reduce_53(val, _values, result)
     result = SQLParser::Statement::FullJoin
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 116)
  def _reduce_54(val, _values, result)
     result = SQLParser::Statement::FullOuterJoin
    result
  end
.,.,

# reduce 55 omitted

# reduce 56 omitted

module_eval(<<'.,.,', 'parser.racc', 123)
  def _reduce_57(val, _values, result)
     result = SQLParser::Statement::On.new(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 126)
  def _reduce_58(val, _values, result)
     result = SQLParser::Statement::Using.new(val[2])
    result
  end
.,.,

# reduce 59 omitted

# reduce 60 omitted

module_eval(<<'.,.,', 'parser.racc', 133)
  def _reduce_61(val, _values, result)
     result = SQLParser::Statement::WhereClause.new(val[1])
    result
  end
.,.,

# reduce 62 omitted

module_eval(<<'.,.,', 'parser.racc', 137)
  def _reduce_63(val, _values, result)
     result = SQLParser::Statement::GroupByClause.new(val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 140)
  def _reduce_64(val, _values, result)
     result = Array(val[0]) + Array(val[2])
    result
  end
.,.,

# reduce 65 omitted

# reduce 66 omitted

# reduce 67 omitted

module_eval(<<'.,.,', 'parser.racc', 148)
  def _reduce_68(val, _values, result)
     result = SQLParser::Statement::HavingClause.new(val[1])
    result
  end
.,.,

# reduce 69 omitted

module_eval(<<'.,.,', 'parser.racc', 155)
  def _reduce_70(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Between.new(val[0], val[3], val[5]))
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 156)
  def _reduce_71(val, _values, result)
     result = SQLParser::Statement::Between.new(val[0], val[2], val[4])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 159)
  def _reduce_72(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::In.new(val[0], val[3]))
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 160)
  def _reduce_73(val, _values, result)
     result = SQLParser::Statement::In.new(val[0], val[2])
    result
  end
.,.,

# reduce 74 omitted

module_eval(<<'.,.,', 'parser.racc', 164)
  def _reduce_75(val, _values, result)
     result = SQLParser::Statement::InValueList.new(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 167)
  def _reduce_76(val, _values, result)
     result = Array(val[0]) + Array(val[2])
    result
  end
.,.,

# reduce 77 omitted

module_eval(<<'.,.,', 'parser.racc', 174)
  def _reduce_78(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Like.new(val[0], val[3]))
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 175)
  def _reduce_79(val, _values, result)
     result = SQLParser::Statement::Like.new(val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 178)
  def _reduce_80(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Is.new(val[0], SQLParser::Statement::Null.new))
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 179)
  def _reduce_81(val, _values, result)
     result = SQLParser::Statement::Is.new(val[0], SQLParser::Statement::Null.new)
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 182)
  def _reduce_82(val, _values, result)
     result = SQLParser::Statement::Exists.new(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 186)
  def _reduce_83(val, _values, result)
     result = SQLParser::Statement::Table.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 189)
  def _reduce_84(val, _values, result)
     result = Array(val[0]) + Array(val[2])
    result
  end
.,.,

# reduce 85 omitted

# reduce 86 omitted

module_eval(<<'.,.,', 'parser.racc', 195)
  def _reduce_87(val, _values, result)
     result = SQLParser::Statement::Or.new(val[0], val[2])
    result
  end
.,.,

# reduce 88 omitted

module_eval(<<'.,.,', 'parser.racc', 199)
  def _reduce_89(val, _values, result)
     result = SQLParser::Statement::And.new(val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 202)
  def _reduce_90(val, _values, result)
     result = SQLParser::Statement::Not.new(val[1])
    result
  end
.,.,

# reduce 91 omitted

# reduce 92 omitted

# reduce 93 omitted

module_eval(<<'.,.,', 'parser.racc', 210)
  def _reduce_94(val, _values, result)
     result = val[1]
    result
  end
.,.,

# reduce 95 omitted

# reduce 96 omitted

# reduce 97 omitted

# reduce 98 omitted

# reduce 99 omitted

# reduce 100 omitted

module_eval(<<'.,.,', 'parser.racc', 221)
  def _reduce_101(val, _values, result)
     result = SQLParser::Statement::Equals.new(val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 222)
  def _reduce_102(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Equals.new(val[0], val[2]))
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 223)
  def _reduce_103(val, _values, result)
     result = SQLParser::Statement::Less.new(val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 224)
  def _reduce_104(val, _values, result)
     result = SQLParser::Statement::Greater.new(val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 225)
  def _reduce_105(val, _values, result)
     result = SQLParser::Statement::LessOrEquals.new(val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 226)
  def _reduce_106(val, _values, result)
     result = SQLParser::Statement::GreaterOrEquals.new(val[0], val[2])
    result
  end
.,.,

# reduce 107 omitted

# reduce 108 omitted

# reduce 109 omitted

# reduce 110 omitted

# reduce 111 omitted

module_eval(<<'.,.,', 'parser.racc', 240)
  def _reduce_112(val, _values, result)
     result = SQLParser::Statement::Add.new(val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 241)
  def _reduce_113(val, _values, result)
     result = SQLParser::Statement::Subtract.new(val[0], val[2])
    result
  end
.,.,

# reduce 114 omitted

module_eval(<<'.,.,', 'parser.racc', 245)
  def _reduce_115(val, _values, result)
     result = SQLParser::Statement::Multiply.new(val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 246)
  def _reduce_116(val, _values, result)
     result = SQLParser::Statement::Divide.new(val[0], val[2])
    result
  end
.,.,

# reduce 117 omitted

module_eval(<<'.,.,', 'parser.racc', 250)
  def _reduce_118(val, _values, result)
     result = val[0].new(val[1])
    result
  end
.,.,

# reduce 119 omitted

# reduce 120 omitted

# reduce 121 omitted

# reduce 122 omitted

module_eval(<<'.,.,', 'parser.racc', 257)
  def _reduce_123(val, _values, result)
     result = val[1]
    result
  end
.,.,

# reduce 124 omitted

# reduce 125 omitted

# reduce 126 omitted

# reduce 127 omitted

module_eval(<<'.,.,', 'parser.racc', 268)
  def _reduce_128(val, _values, result)
     result = SQLParser::Statement::CurrentUser.new
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 271)
  def _reduce_129(val, _values, result)
     result = SQLParser::Statement::QualifiedColumn.new(val[0], val[2])
    result
  end
.,.,

# reduce 130 omitted

# reduce 131 omitted

module_eval(<<'.,.,', 'parser.racc', 278)
  def _reduce_132(val, _values, result)
     result = SQLParser::Statement::Count.new(SQLParser::Statement::All.new)
    result
  end
.,.,

# reduce 133 omitted

module_eval(<<'.,.,', 'parser.racc', 282)
  def _reduce_134(val, _values, result)
     result = SQLParser::Statement::Count.new(val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 283)
  def _reduce_135(val, _values, result)
     result = SQLParser::Statement::Average.new(val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 284)
  def _reduce_136(val, _values, result)
     result = SQLParser::Statement::Maximum.new(val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 285)
  def _reduce_137(val, _values, result)
     result = SQLParser::Statement::Minimum.new(val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 286)
  def _reduce_138(val, _values, result)
     result = SQLParser::Statement::Sum.new(val[2])
    result
  end
.,.,

# reduce 139 omitted

# reduce 140 omitted

module_eval(<<'.,.,', 'parser.racc', 294)
  def _reduce_141(val, _values, result)
     result = SQLParser::Statement::Float.new("#{val[0]}.#{val[2]}".to_f)
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 295)
  def _reduce_142(val, _values, result)
     result = SQLParser::Statement::Float.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 296)
  def _reduce_143(val, _values, result)
     result = SQLParser::Statement::Float.new("0.#{val[1]}".to_f)
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 297)
  def _reduce_144(val, _values, result)
     result = SQLParser::Statement::Integer.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 300)
  def _reduce_145(val, _values, result)
     result = SQLParser::Statement::ApproximateFloat.new(val[0], val[2])
    result
  end
.,.,

# reduce 146 omitted

# reduce 147 omitted

module_eval(<<'.,.,', 'parser.racc', 309)
  def _reduce_148(val, _values, result)
     result = val[0].new(SQLParser::Statement::Integer.new(val[1]))
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 310)
  def _reduce_149(val, _values, result)
     result = SQLParser::Statement::Integer.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 313)
  def _reduce_150(val, _values, result)
     result = SQLParser::Statement::UnaryPlus
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 314)
  def _reduce_151(val, _values, result)
     result = SQLParser::Statement::UnaryMinus
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 318)
  def _reduce_152(val, _values, result)
     result = SQLParser::Statement::Column.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 322)
  def _reduce_153(val, _values, result)
     result = SQLParser::Statement::String.new(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 323)
  def _reduce_154(val, _values, result)
     result = SQLParser::Statement::String.new('')
    result
  end
.,.,

# reduce 155 omitted

# reduce 156 omitted

module_eval(<<'.,.,', 'parser.racc', 330)
  def _reduce_157(val, _values, result)
     result = SQLParser::Statement::Date.new(val[1])
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
end   # module SQLParser
