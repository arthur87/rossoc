#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.8.0
# from Racc grammar file "parser.racc".
#

require 'racc/parser.rb'

require File.dirname(__FILE__) + '/parser.rex.rb'

module SQLParser
  class Parser < Racc::Parser

module_eval(<<'...end parser.racc/module_eval...', 'parser.racc', 336)

def self.parse(sql)
  new.scan_str(sql)
end
...end parser.racc/module_eval...
##### State transition tables begin ###

racc_action_table = [
    44,   219,  -126,    28,    72,    67,    95,   107,     7,    14,
   230,     8,    70,    71,   130,     9,   231,    11,    44,    12,
    95,    28,   221,    53,   222,   223,    55,    69,    56,    69,
   189,    62,    18,  -126,  -126,  -126,    44,    73,    69,    28,
    47,    48,    44,    32,    45,    36,    38,    39,    40,    41,
    18,    49,    69,    52,    47,    48,    44,    87,    86,    28,
    65,    32,    45,    36,    38,    39,    40,    41,    18,    49,
    66,    52,   134,   135,   -82,    77,    47,    48,    78,    32,
    45,    36,    38,    39,    40,    41,    45,    49,    18,    52,
    79,    44,    80,    49,    28,    52,    47,    48,    81,    32,
    45,    36,    38,    39,    40,    41,   100,    49,    82,    52,
  -145,    44,    83,    84,    28,    85,    88,   110,    62,   101,
    69,   103,   104,    18,   105,   106,   212,   213,   118,    69,
   126,    47,    48,   131,    32,    45,    36,    38,    39,    40,
    41,   132,    49,    18,    52,    44,    99,   139,    28,    62,
   141,    47,    48,   142,    32,    45,    36,    38,    39,    40,
    41,   143,    49,    44,    52,   100,    28,   144,   145,    98,
    69,   148,   169,    99,   170,   171,   172,    18,   101,   173,
   103,   104,   174,   105,   106,    47,    48,   175,    32,    45,
    36,    38,    39,    40,    41,    18,    49,    44,    52,   177,
    28,   178,    62,    47,    48,    62,    32,    45,    36,    38,
    39,    40,    41,   184,    49,    44,    52,   185,    28,   189,
   201,   204,   207,   208,   120,    18,   218,   118,   226,    18,
     8,   241,   189,    44,   242,   204,    28,    47,    48,   226,
    32,    45,    36,    38,    39,    40,    41,    18,    49,   246,
    52,    44,   248,   189,    28,    47,    48,    69,    32,    45,
    36,    38,    39,    40,    41,    18,    49,    18,    52,    44,
   253,   255,    28,    47,    48,   256,    32,    45,    36,    38,
    39,    40,    41,    18,    49,   257,    52,    44,    69,   nil,
    28,    47,    48,   nil,    32,    45,    36,    38,    39,    40,
    41,    18,    49,   nil,    52,   nil,   nil,   nil,   nil,    47,
    48,   nil,    32,    45,    36,    38,    39,    40,    41,    18,
    49,    44,    52,   nil,   149,   nil,   nil,    47,    48,   nil,
    32,    45,    36,    38,    39,    40,    41,   nil,    49,    44,
    52,   100,    28,   nil,   nil,   156,   nil,   nil,   nil,   nil,
   nil,   nil,   153,    18,   101,   nil,   103,   104,   nil,   105,
   106,    47,    48,   nil,    32,    45,    36,    38,    39,    40,
    41,    18,    49,    44,    52,   nil,   149,   nil,   nil,    47,
    48,     8,    32,    45,    36,    38,    39,    40,    41,   nil,
    49,   nil,    52,   nil,   nil,   nil,    44,   156,   nil,   149,
   nil,   nil,   nil,   nil,   153,    18,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    47,    48,   nil,    32,    45,    36,    38,
    39,    40,    41,   nil,    49,   nil,    52,   153,    18,    44,
   nil,   nil,    28,   nil,   nil,   nil,    47,    48,   nil,    32,
    45,    36,    38,    39,    40,    41,   nil,    49,   nil,    52,
   nil,   nil,   nil,   nil,   nil,    44,   nil,   nil,   149,   nil,
   nil,    18,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    47,
    48,   nil,    32,    45,    36,    38,    39,    40,    41,   156,
    49,    44,    52,   nil,   149,   nil,   153,    18,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    47,    48,   nil,    32,    45,
    36,    38,    39,    40,    41,   156,    49,    44,    52,   nil,
   224,   nil,   153,    18,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    47,    48,   nil,    32,    45,    36,    38,    39,    40,
    41,   nil,    49,    44,    52,   nil,   224,   nil,   nil,    18,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    47,    48,   nil,
    32,    45,    36,    38,    39,    40,    41,   nil,    49,    44,
    52,   nil,   224,   nil,   nil,    18,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    47,    48,   nil,    32,    45,    36,    38,
    39,    40,    41,   nil,    49,    44,    52,   nil,   224,   nil,
   nil,    18,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    47,
    48,   nil,    32,    45,    36,    38,    39,    40,    41,   nil,
    49,    44,    52,   nil,   224,   nil,   nil,    18,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    47,    48,   nil,    32,    45,
    36,    38,    39,    40,    41,   nil,    49,    44,    52,   nil,
   224,   nil,   nil,    18,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    47,    48,   nil,    32,    45,    36,    38,    39,    40,
    41,   nil,    49,    44,    52,   nil,   224,   nil,   nil,    18,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    47,    48,   nil,
    32,    45,    36,    38,    39,    40,    41,   nil,    49,    44,
    52,   nil,   224,   nil,   nil,    18,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    47,    48,   nil,    32,    45,    36,    38,
    39,    40,    41,   nil,    49,    44,    52,   nil,   149,   nil,
   nil,    18,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    47,
    48,   nil,    32,    45,    36,    38,    39,    40,    41,   156,
    49,    44,    52,   nil,    28,   nil,   153,    18,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    47,    48,   nil,    32,    45,
    36,    38,    39,    40,    41,   nil,    49,    44,    52,   nil,
   149,   nil,   nil,    18,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    47,    48,   nil,    32,    45,    36,    38,    39,    40,
    41,   156,    49,    44,    52,   nil,   224,   nil,   153,    18,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    47,    48,   nil,
    32,    45,    36,    38,    39,    40,    41,   nil,    49,    44,
    52,   nil,   224,   nil,   nil,    18,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    47,    48,   nil,    32,    45,    36,    38,
    39,    40,    41,   nil,    49,    44,    52,   nil,    28,   nil,
   nil,    18,   nil,     8,   nil,   nil,   nil,   nil,   nil,    47,
    48,   nil,    32,    45,    36,    38,    39,    40,    41,   nil,
    49,    44,    52,   nil,    28,   nil,   nil,    18,   nil,     8,
   nil,   nil,   nil,   nil,   nil,    47,    48,   nil,    32,    45,
    36,    38,    39,    40,    41,   nil,    49,    44,    52,   nil,
   224,   nil,   nil,    18,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    47,    48,   nil,    32,    45,    36,    38,    39,    40,
    41,   nil,    49,    44,    52,   nil,   224,   nil,   nil,    18,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    47,    48,   nil,
    32,    45,    36,    38,    39,    40,    41,   nil,    49,   nil,
    52,   nil,   nil,   nil,   nil,    18,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    47,    48,   nil,    32,    45,    36,    38,
    39,    40,    41,   nil,    49,   nil,    52,   190,   191,   nil,
   192,   193,   194,   nil,   nil,   nil,   nil,   195,   196,   197,
   198,   199,   200 ]

racc_action_check = [
     8,   187,    20,     8,    22,    17,    56,    58,     0,     8,
   194,     0,    21,    21,    85,     1,   194,     5,    23,     7,
   132,    23,   190,     9,   190,   190,    10,    17,    11,    58,
   187,    12,     8,    20,    20,    20,    28,    22,    56,    28,
     8,     8,    55,     8,     8,     8,     8,     8,     8,     8,
    23,     8,   132,     8,    85,    85,    66,    49,    49,    66,
    13,    23,    23,    23,    23,    23,    23,    23,    28,    23,
    16,    23,    93,    93,    18,    33,    28,    28,    36,    28,
    28,    28,    28,    28,    28,    28,    55,    28,    66,    28,
    38,    70,    39,    55,    70,    55,    66,    66,    40,    66,
    66,    66,    66,    66,    66,    66,   182,    66,    41,    66,
    42,    71,    44,    45,    71,    46,    52,    64,    65,   182,
    67,   182,   182,    70,   182,   182,   182,   182,    76,    77,
    83,    70,    70,    86,    70,    70,    70,    70,    70,    70,
    70,    91,    70,    71,    70,    72,    97,    99,    72,   100,
   101,    71,    71,   102,    71,    71,    71,    71,    71,    71,
    71,   104,    71,    73,    71,    57,    73,   105,   106,    57,
   107,   109,   120,    57,   121,   122,   123,    72,    57,   124,
    57,    57,   125,    57,    57,    72,    72,   129,    72,    72,
    72,    72,    72,    72,    72,    73,    72,    79,    72,   137,
    79,   138,   141,    73,    73,   142,    73,    73,    73,    73,
    73,    73,    73,   147,    73,    78,    73,   148,    78,   150,
   153,   154,   179,   180,    78,   185,   186,   188,   192,    79,
   201,   213,   214,    80,   215,   220,    80,    79,    79,   222,
    79,    79,    79,    79,    79,    79,    79,    78,    79,   225,
    79,    81,   230,   240,    81,    78,    78,   241,    78,    78,
    78,    78,    78,    78,    78,    80,    78,   242,    78,    82,
   243,   247,    82,    80,    80,   249,    80,    80,    80,    80,
    80,    80,    80,    81,    80,   250,    80,    98,   257,   nil,
    98,    81,    81,   nil,    81,    81,    81,    81,    81,    81,
    81,    82,    81,   nil,    81,   nil,   nil,   nil,   nil,    82,
    82,   nil,    82,    82,    82,    82,    82,    82,    82,    98,
    82,   110,    82,   nil,   110,   nil,   nil,    98,    98,   nil,
    98,    98,    98,    98,    98,    98,    98,   nil,    98,   139,
    98,   111,   139,   nil,   nil,   110,   nil,   nil,   nil,   nil,
   nil,   nil,   110,   110,   111,   nil,   111,   111,   nil,   111,
   111,   110,   110,   nil,   110,   110,   110,   110,   110,   110,
   110,   139,   110,   149,   110,   nil,   149,   nil,   nil,   139,
   139,   149,   139,   139,   139,   139,   139,   139,   139,   nil,
   139,   nil,   139,   nil,   nil,   nil,   156,   149,   nil,   156,
   nil,   nil,   nil,   nil,   149,   149,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   149,   149,   nil,   149,   149,   149,   149,
   149,   149,   149,   nil,   149,   nil,   149,   156,   156,   178,
   nil,   nil,   178,   nil,   nil,   nil,   156,   156,   nil,   156,
   156,   156,   156,   156,   156,   156,   nil,   156,   nil,   156,
   nil,   nil,   nil,   nil,   nil,   184,   nil,   nil,   184,   nil,
   nil,   178,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   178,
   178,   nil,   178,   178,   178,   178,   178,   178,   178,   184,
   178,   189,   178,   nil,   189,   nil,   184,   184,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   184,   184,   nil,   184,   184,
   184,   184,   184,   184,   184,   189,   184,   191,   184,   nil,
   191,   nil,   189,   189,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   189,   189,   nil,   189,   189,   189,   189,   189,   189,
   189,   nil,   189,   193,   189,   nil,   193,   nil,   nil,   191,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   191,   191,   nil,
   191,   191,   191,   191,   191,   191,   191,   nil,   191,   195,
   191,   nil,   195,   nil,   nil,   193,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   193,   193,   nil,   193,   193,   193,   193,
   193,   193,   193,   nil,   193,   196,   193,   nil,   196,   nil,
   nil,   195,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   195,
   195,   nil,   195,   195,   195,   195,   195,   195,   195,   nil,
   195,   197,   195,   nil,   197,   nil,   nil,   196,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   196,   196,   nil,   196,   196,
   196,   196,   196,   196,   196,   nil,   196,   198,   196,   nil,
   198,   nil,   nil,   197,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   197,   197,   nil,   197,   197,   197,   197,   197,   197,
   197,   nil,   197,   199,   197,   nil,   199,   nil,   nil,   198,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   198,   198,   nil,
   198,   198,   198,   198,   198,   198,   198,   nil,   198,   200,
   198,   nil,   200,   nil,   nil,   199,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   199,   199,   nil,   199,   199,   199,   199,
   199,   199,   199,   nil,   199,   204,   199,   nil,   204,   nil,
   nil,   200,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   200,
   200,   nil,   200,   200,   200,   200,   200,   200,   200,   204,
   200,   208,   200,   nil,   208,   nil,   204,   204,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   204,   204,   nil,   204,   204,
   204,   204,   204,   204,   204,   nil,   204,   212,   204,   nil,
   212,   nil,   nil,   208,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   208,   208,   nil,   208,   208,   208,   208,   208,   208,
   208,   212,   208,   221,   208,   nil,   221,   nil,   212,   212,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   212,   212,   nil,
   212,   212,   212,   212,   212,   212,   212,   nil,   212,   223,
   212,   nil,   223,   nil,   nil,   221,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   221,   221,   nil,   221,   221,   221,   221,
   221,   221,   221,   nil,   221,   224,   221,   nil,   224,   nil,
   nil,   223,   nil,   224,   nil,   nil,   nil,   nil,   nil,   223,
   223,   nil,   223,   223,   223,   223,   223,   223,   223,   nil,
   223,   226,   223,   nil,   226,   nil,   nil,   224,   nil,   226,
   nil,   nil,   nil,   nil,   nil,   224,   224,   nil,   224,   224,
   224,   224,   224,   224,   224,   nil,   224,   246,   224,   nil,
   246,   nil,   nil,   226,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   226,   226,   nil,   226,   226,   226,   226,   226,   226,
   226,   nil,   226,   253,   226,   nil,   253,   nil,   nil,   246,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   246,   246,   nil,
   246,   246,   246,   246,   246,   246,   246,   nil,   246,   nil,
   246,   nil,   nil,   nil,   nil,   253,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   253,   253,   nil,   253,   253,   253,   253,
   253,   253,   253,   nil,   253,   nil,   253,   152,   152,   nil,
   152,   152,   152,   nil,   nil,   nil,   nil,   152,   152,   152,
   152,   152,   152 ]

racc_action_pointer = [
    -3,    15,   nil,   nil,   nil,    14,   nil,     7,    -6,    23,
    24,    24,    -7,    43,   nil,   nil,    65,   -11,    24,   nil,
   -13,   -34,   -11,    12,   nil,   nil,   nil,   nil,    30,   nil,
   nil,   nil,   nil,    25,   nil,   nil,    69,   nil,    81,    83,
    89,    99,    54,   nil,    62,   107,    59,   nil,   nil,     0,
   nil,   nil,    56,   nil,   nil,    36,     0,   160,    -9,   nil,
   nil,   nil,   nil,   nil,    90,    80,    50,    82,   nil,   nil,
    85,   105,   139,   157,   nil,   nil,   118,    91,   209,   191,
   227,   245,   263,   124,   nil,     8,    76,   nil,   nil,   nil,
   nil,   136,   nil,    65,   nil,   nil,   nil,   133,   281,   138,
   111,   131,   134,   nil,   139,   145,   146,   132,   nil,   143,
   315,   336,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   162,   164,   165,   166,   169,   172,   nil,   nil,   nil,   181,
   nil,   nil,    14,   nil,   nil,   nil,   nil,   189,   196,   333,
   nil,   164,   167,   nil,   nil,   nil,   nil,   184,   213,   367,
   180,   nil,   947,   211,   189,   nil,   390,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   423,   212,
   218,   nil,   101,   nil,   449,   187,   216,    -9,   217,   475,
    -9,   501,   219,   527,   -20,   553,   579,   605,   631,   657,
   683,   216,   nil,   nil,   709,   nil,   nil,   nil,   735,   nil,
   nil,   nil,   761,   222,   193,   229,   nil,   nil,   nil,   nil,
   203,   787,   230,   813,   839,   217,   865,   nil,   nil,   nil,
   216,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   214,   219,   229,   238,   nil,   nil,   891,   261,   nil,   265,
   280,   nil,   nil,   917,   nil,   nil,   nil,   250,   nil,   nil ]

racc_action_default = [
  -157,  -157,    -1,    -2,    -3,    -8,   -19,  -157,  -157,  -157,
    -5,  -157,  -157,   -27,   -28,   -29,   -31,   -34,  -151,  -109,
  -110,  -113,  -116,  -157,  -118,  -119,  -120,  -121,  -157,  -123,
  -124,  -125,  -127,  -157,  -129,  -130,  -157,  -132,  -157,  -157,
  -157,  -157,  -138,  -139,  -143,  -157,  -157,  -149,  -150,  -157,
  -154,  -155,  -157,   260,    -4,  -157,  -157,  -157,   -39,   -40,
   -42,   -43,   -82,   -26,   -59,  -157,  -157,  -157,   -33,  -151,
  -157,  -157,  -157,  -157,  -117,  -126,  -157,  -157,  -157,  -157,
  -157,  -157,  -157,  -141,  -142,  -157,  -157,  -153,  -156,    -6,
    -7,    -9,   -11,   -15,   -13,   -14,   -20,  -157,  -157,  -157,
  -157,  -157,  -157,   -47,   -49,   -51,   -52,  -157,   -38,   -61,
  -157,   -36,   -30,   -32,  -111,  -112,  -114,  -115,  -122,  -128,
  -157,  -157,  -157,  -157,  -157,  -157,  -140,  -144,  -146,  -157,
  -148,  -152,  -157,   -12,   -16,   -17,   -21,  -157,   -24,  -157,
   -44,  -157,  -157,   -48,   -50,   -53,   -37,   -66,  -157,  -157,
   -60,   -68,  -157,  -157,   -85,   -87,  -157,   -90,   -91,   -92,
   -94,   -95,   -96,   -97,   -98,   -99,  -106,  -107,  -108,  -131,
  -133,  -134,  -135,  -136,  -137,  -147,   -10,   -22,  -157,  -157,
   -76,   -45,  -157,   -35,  -157,  -157,  -157,  -157,  -108,  -157,
  -157,  -157,  -157,  -157,  -157,  -157,  -157,  -157,  -157,  -157,
  -157,  -157,   -41,   -81,  -157,   -89,   -23,   -25,  -157,   -46,
   -54,   -55,  -157,  -157,   -67,   -62,   -64,   -65,   -18,   -93,
   -86,  -157,  -157,  -157,  -157,  -157,  -157,   -72,   -73,   -78,
  -157,   -80,  -100,  -101,  -102,  -103,  -104,  -105,   -88,   -75,
   -56,  -157,  -157,  -157,   -71,   -77,  -157,  -157,   -79,  -157,
   -58,   -84,   -63,  -157,   -70,   -74,   -57,  -157,   -69,   -83 ]

racc_goto_table = [
    68,    17,   137,    57,   150,    58,    15,   179,    92,   216,
   202,   217,    96,     1,   227,   114,   115,   116,   117,     2,
     3,    76,     4,     5,    10,   225,    54,   229,    89,   232,
   233,   234,   235,   236,   237,    90,    91,   133,    97,    94,
    13,   108,    63,   187,   244,    64,   109,   147,   183,   202,
   113,    75,   136,   203,   209,   243,   111,   245,    58,    17,
   119,   210,   211,   249,   112,   250,   252,   215,   217,   220,
   238,   121,   122,   123,   124,   125,   239,   205,   214,   202,
   254,   129,   206,    75,   176,    74,   127,   258,   128,   nil,
   146,   138,   nil,   140,   247,   nil,   nil,   nil,    75,    75,
    75,    75,   nil,   nil,   nil,   nil,   240,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    94,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   180,   182,   181,    58,   nil,   nil,   nil,   nil,
   nil,   nil,   188,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   138,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   180,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    76,   nil,   180,
   nil,   nil,   nil,   nil,   251,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   259 ]

racc_goto_check = [
    14,    21,    20,    17,    40,    31,    25,    22,    11,    44,
    15,    45,    18,     1,    50,    61,    61,    63,    63,     2,
     3,    21,     4,     5,     6,    48,     7,    48,     8,    48,
    48,    48,    48,    48,    48,     9,    10,    13,    19,    14,
    23,    14,    24,    40,    50,    27,    28,    29,    30,    15,
    14,    62,    18,    33,    37,    48,    17,    48,    31,    21,
    14,    38,    39,    41,    25,    42,    44,    43,    45,    54,
    55,    21,    21,    21,    21,    21,    22,    56,    40,    15,
    48,    65,    20,    62,    11,    66,    76,    48,    77,   nil,
    14,    21,   nil,    31,    22,   nil,   nil,   nil,    62,    62,
    62,    62,   nil,   nil,   nil,   nil,    40,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    14,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    21,    17,    31,    31,   nil,   nil,   nil,   nil,
   nil,   nil,    21,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    21,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    21,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    21,   nil,    21,
   nil,   nil,   nil,   nil,    14,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    14 ]

racc_goto_pointer = [
   nil,    13,    19,    20,    22,    23,    19,    16,   -27,   -20,
   -20,   -48,   nil,   -56,   -17,  -143,   nil,    -9,   -45,   -19,
   -96,    -7,  -132,    32,    29,    -2,   nil,    32,   -18,   -62,
   -99,    -7,   nil,  -100,   nil,   nil,   nil,  -128,  -121,  -120,
  -106,  -178,  -176,  -118,  -176,  -174,   nil,   nil,  -166,   nil,
  -178,   nil,   nil,   nil,  -120,  -134,   -79,   nil,   nil,   nil,
   nil,   -55,    28,   -55,   nil,    -4,    62,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,     1,     3,   nil,   nil ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,   186,   nil,   nil,   nil,    29,
   nil,   nil,    93,   nil,    34,   151,     6,   nil,   nil,   nil,
   nil,   168,   nil,   nil,   nil,   nil,    16,   nil,   nil,   nil,
   nil,    35,    59,   228,    60,    61,   102,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    26,   167,   161,   152,   162,
   nil,   163,   164,   165,   154,   155,   157,   158,   159,   160,
   166,    19,    20,    21,    22,    23,    24,    25,    27,    30,
    31,    33,    37,    42,    43,    46,   nil,   nil,    50,    51 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 62, :_reduce_none,
  1, 63, :_reduce_none,
  1, 63, :_reduce_none,
  3, 64, :_reduce_4,
  0, 68, :_reduce_none,
  2, 68, :_reduce_6,
  1, 69, :_reduce_none,
  0, 67, :_reduce_none,
  3, 67, :_reduce_9,
  3, 71, :_reduce_10,
  1, 71, :_reduce_none,
  2, 72, :_reduce_12,
  1, 73, :_reduce_none,
  1, 73, :_reduce_14,
  0, 74, :_reduce_15,
  1, 74, :_reduce_16,
  1, 74, :_reduce_17,
  3, 76, :_reduce_18,
  1, 66, :_reduce_none,
  4, 65, :_reduce_20,
  5, 65, :_reduce_21,
  3, 80, :_reduce_22,
  3, 81, :_reduce_23,
  1, 81, :_reduce_none,
  4, 79, :_reduce_25,
  3, 77, :_reduce_26,
  2, 77, :_reduce_27,
  1, 84, :_reduce_28,
  1, 84, :_reduce_29,
  3, 86, :_reduce_30,
  1, 86, :_reduce_none,
  3, 87, :_reduce_32,
  2, 87, :_reduce_33,
  1, 87, :_reduce_none,
  4, 85, :_reduce_35,
  2, 88, :_reduce_36,
  3, 78, :_reduce_37,
  2, 78, :_reduce_38,
  1, 78, :_reduce_none,
  1, 78, :_reduce_none,
  1, 94, :_reduce_none,
  1, 93, :_reduce_none,
  1, 93, :_reduce_none,
  3, 95, :_reduce_44,
  4, 95, :_reduce_45,
  5, 96, :_reduce_46,
  1, 97, :_reduce_47,
  2, 97, :_reduce_48,
  1, 97, :_reduce_49,
  2, 97, :_reduce_50,
  1, 97, :_reduce_51,
  1, 97, :_reduce_52,
  2, 97, :_reduce_53,
  1, 98, :_reduce_none,
  1, 98, :_reduce_none,
  2, 99, :_reduce_56,
  4, 100, :_reduce_57,
  1, 102, :_reduce_none,
  0, 89, :_reduce_none,
  2, 89, :_reduce_60,
  0, 90, :_reduce_none,
  3, 90, :_reduce_62,
  3, 104, :_reduce_63,
  1, 104, :_reduce_none,
  1, 105, :_reduce_none,
  0, 91, :_reduce_none,
  2, 91, :_reduce_67,
  1, 107, :_reduce_none,
  6, 108, :_reduce_69,
  5, 108, :_reduce_70,
  4, 110, :_reduce_71,
  3, 110, :_reduce_72,
  1, 111, :_reduce_none,
  3, 111, :_reduce_74,
  3, 83, :_reduce_75,
  1, 83, :_reduce_none,
  4, 112, :_reduce_77,
  3, 112, :_reduce_78,
  4, 113, :_reduce_79,
  3, 113, :_reduce_80,
  2, 114, :_reduce_81,
  1, 92, :_reduce_82,
  3, 103, :_reduce_83,
  1, 103, :_reduce_none,
  1, 101, :_reduce_none,
  3, 101, :_reduce_86,
  1, 115, :_reduce_none,
  3, 115, :_reduce_88,
  2, 116, :_reduce_89,
  1, 116, :_reduce_none,
  1, 117, :_reduce_none,
  1, 118, :_reduce_none,
  3, 118, :_reduce_93,
  1, 119, :_reduce_none,
  1, 119, :_reduce_none,
  1, 119, :_reduce_none,
  1, 119, :_reduce_none,
  1, 119, :_reduce_none,
  1, 119, :_reduce_none,
  3, 120, :_reduce_100,
  3, 120, :_reduce_101,
  3, 120, :_reduce_102,
  3, 120, :_reduce_103,
  3, 120, :_reduce_104,
  3, 120, :_reduce_105,
  1, 109, :_reduce_none,
  1, 109, :_reduce_none,
  1, 121, :_reduce_none,
  1, 82, :_reduce_none,
  1, 82, :_reduce_none,
  3, 122, :_reduce_111,
  3, 122, :_reduce_112,
  1, 122, :_reduce_none,
  3, 124, :_reduce_114,
  3, 124, :_reduce_115,
  1, 124, :_reduce_none,
  2, 125, :_reduce_117,
  1, 125, :_reduce_none,
  1, 127, :_reduce_none,
  1, 127, :_reduce_none,
  1, 127, :_reduce_none,
  3, 127, :_reduce_122,
  1, 128, :_reduce_none,
  1, 128, :_reduce_none,
  1, 70, :_reduce_none,
  1, 70, :_reduce_none,
  1, 130, :_reduce_127,
  3, 106, :_reduce_128,
  1, 106, :_reduce_none,
  1, 132, :_reduce_none,
  4, 129, :_reduce_131,
  1, 129, :_reduce_none,
  4, 133, :_reduce_133,
  4, 133, :_reduce_134,
  4, 133, :_reduce_135,
  4, 133, :_reduce_136,
  4, 133, :_reduce_137,
  1, 131, :_reduce_none,
  1, 131, :_reduce_none,
  3, 134, :_reduce_140,
  2, 134, :_reduce_141,
  2, 134, :_reduce_142,
  1, 134, :_reduce_143,
  3, 135, :_reduce_144,
  1, 136, :_reduce_none,
  1, 137, :_reduce_none,
  2, 138, :_reduce_147,
  1, 138, :_reduce_148,
  1, 126, :_reduce_149,
  1, 126, :_reduce_150,
  1, 75, :_reduce_151,
  3, 123, :_reduce_152,
  2, 123, :_reduce_153,
  1, 123, :_reduce_none,
  1, 139, :_reduce_none,
  2, 140, :_reduce_156 ]

racc_reduce_n = 157

racc_shift_n = 260

racc_token_table = {
  false => 0,
  :error => 1,
  :RSLEEP => 2,
  :ORDER => 3,
  :BY => 4,
  :comma => 5,
  :unsigned_integer => 6,
  :ASC => 7,
  :DESC => 8,
  :left_paren => 9,
  :right_paren => 10,
  :INSERT => 11,
  :INTO => 12,
  :VALUES => 13,
  :SELECT => 14,
  :asterisk => 15,
  :AS => 16,
  :FROM => 17,
  :CROSS => 18,
  :JOIN => 19,
  :INNER => 20,
  :LEFT => 21,
  :OUTER => 22,
  :RIGHT => 23,
  :FULL => 24,
  :ON => 25,
  :USING => 26,
  :WHERE => 27,
  :GROUP => 28,
  :HAVING => 29,
  :NOT => 30,
  :BETWEEN => 31,
  :AND => 32,
  :IN => 33,
  :LIKE => 34,
  :IS => 35,
  :NULL => 36,
  :EXISTS => 37,
  :identifier => 38,
  :OR => 39,
  :equals_operator => 40,
  :not_equals_operator => 41,
  :less_than_operator => 42,
  :greater_than_operator => 43,
  :less_than_or_equals_operator => 44,
  :greater_than_or_equals_operator => 45,
  :plus_sign => 46,
  :minus_sign => 47,
  :solidus => 48,
  :CURRENT_USER => 49,
  :period => 50,
  :COUNT => 51,
  :AVG => 52,
  :MAX => 53,
  :MIN => 54,
  :SUM => 55,
  :E => 56,
  :quote => 57,
  :character_string_literal => 58,
  :DATE => 59,
  :date_string => 60 }

racc_nt_base = 61

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]
Ractor.make_shareable(Racc_arg) if defined?(Ractor)

Racc_token_to_s_table = [
  "$end",
  "error",
  "RSLEEP",
  "ORDER",
  "BY",
  "comma",
  "unsigned_integer",
  "ASC",
  "DESC",
  "left_paren",
  "right_paren",
  "INSERT",
  "INTO",
  "VALUES",
  "SELECT",
  "asterisk",
  "AS",
  "FROM",
  "CROSS",
  "JOIN",
  "INNER",
  "LEFT",
  "OUTER",
  "RIGHT",
  "FULL",
  "ON",
  "USING",
  "WHERE",
  "GROUP",
  "HAVING",
  "NOT",
  "BETWEEN",
  "AND",
  "IN",
  "LIKE",
  "IS",
  "NULL",
  "EXISTS",
  "identifier",
  "OR",
  "equals_operator",
  "not_equals_operator",
  "less_than_operator",
  "greater_than_operator",
  "less_than_or_equals_operator",
  "greater_than_or_equals_operator",
  "plus_sign",
  "minus_sign",
  "solidus",
  "CURRENT_USER",
  "period",
  "COUNT",
  "AVG",
  "MAX",
  "MIN",
  "SUM",
  "E",
  "quote",
  "character_string_literal",
  "DATE",
  "date_string",
  "$start",
  "direct_sql_statement",
  "direct_sql_data_statement",
  "direct_select_statement_multiple_rows",
  "insert_specification",
  "query_expression",
  "order_by_clause",
  "rsleep_clause",
  "rsleep_specification",
  "unsigned_literal",
  "sort_specification_list",
  "sort_specification",
  "sort_key",
  "ordering_specification",
  "column_name",
  "subquery",
  "query_specification",
  "table_reference",
  "value_list",
  "column_list",
  "in_column_list",
  "value_expression",
  "in_value_list",
  "select_list",
  "table_expression",
  "select_sublist",
  "derived_column",
  "from_clause",
  "where_clause",
  "group_by_clause",
  "having_clause",
  "table_name",
  "joined_table",
  "table_subquery",
  "cross_join",
  "qualified_join",
  "join_type",
  "join_specification",
  "join_condition",
  "named_columns_join",
  "search_condition",
  "join_column_list",
  "column_name_list",
  "grouping_column_reference_list",
  "grouping_column_reference",
  "column_reference",
  "row_subquery",
  "between_predicate",
  "row_value_constructor",
  "in_predicate",
  "in_predicate_value",
  "like_predicate",
  "null_predicate",
  "exists_predicate",
  "boolean_term",
  "boolean_factor",
  "boolean_test",
  "boolean_primary",
  "predicate",
  "comparison_predicate",
  "row_value_constructor_element",
  "numeric_value_expression",
  "general_literal",
  "term",
  "factor",
  "sign",
  "value_expression_primary",
  "unsigned_value_specification",
  "set_function_specification",
  "general_value_specification",
  "unsigned_numeric_literal",
  "qualifier",
  "general_set_function",
  "exact_numeric_literal",
  "approximate_numeric_literal",
  "mantissa",
  "exponent",
  "signed_integer",
  "datetime_literal",
  "date_literal" ]
Ractor.make_shareable(Racc_token_to_s_table) if defined?(Ractor)

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

# reduce 2 omitted

# reduce 3 omitted

module_eval(<<'.,.,', 'parser.racc', 13)
  def _reduce_4(val, _values, result)
     result = SQLParser::Statement::DirectSelect.new(val[0], val[1], val[2])
    result
  end
.,.,

# reduce 5 omitted

module_eval(<<'.,.,', 'parser.racc', 18)
  def _reduce_6(val, _values, result)
     result = SQLParser::Statement::Rsleep.new(val[1])
    result
  end
.,.,

# reduce 7 omitted

# reduce 8 omitted

module_eval(<<'.,.,', 'parser.racc', 25)
  def _reduce_9(val, _values, result)
     result = SQLParser::Statement::OrderBy.new(val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 28)
  def _reduce_10(val, _values, result)
     result = Array(val[0]) + Array(val[2])
    result
  end
.,.,

# reduce 11 omitted

module_eval(<<'.,.,', 'parser.racc', 32)
  def _reduce_12(val, _values, result)
     result = val[1].new(val[0])
    result
  end
.,.,

# reduce 13 omitted

module_eval(<<'.,.,', 'parser.racc', 36)
  def _reduce_14(val, _values, result)
     result = SQLParser::Statement::Integer.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 39)
  def _reduce_15(val, _values, result)
     result = SQLParser::Statement::Ascending
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 40)
  def _reduce_16(val, _values, result)
     result = SQLParser::Statement::Ascending
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 41)
  def _reduce_17(val, _values, result)
     result = SQLParser::Statement::Descending
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 46)
  def _reduce_18(val, _values, result)
     result = SQLParser::Statement::Subquery.new(val[1])
    result
  end
.,.,

# reduce 19 omitted

module_eval(<<'.,.,', 'parser.racc', 52)
  def _reduce_20(val, _values, result)
     result = SQLParser::Statement::Insert.new(val[2], nil, val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 53)
  def _reduce_21(val, _values, result)
     result = SQLParser::Statement::Insert.new(val[2], val[3], val[4])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 56)
  def _reduce_22(val, _values, result)
     result = SQLParser::Statement::InColumnList.new(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 59)
  def _reduce_23(val, _values, result)
     result = Array(val[0]) + Array(val[2])
    result
  end
.,.,

# reduce 24 omitted

module_eval(<<'.,.,', 'parser.racc', 63)
  def _reduce_25(val, _values, result)
     result = SQLParser::Statement::InValueList.new(val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 66)
  def _reduce_26(val, _values, result)
     result = SQLParser::Statement::Select.new(val[1], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 67)
  def _reduce_27(val, _values, result)
     result = SQLParser::Statement::Select.new(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 70)
  def _reduce_28(val, _values, result)
     result = SQLParser::Statement::All.new
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 71)
  def _reduce_29(val, _values, result)
     result = SQLParser::Statement::SelectList.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 74)
  def _reduce_30(val, _values, result)
     result = Array(val[0]) + Array(val[2])
    result
  end
.,.,

# reduce 31 omitted

module_eval(<<'.,.,', 'parser.racc', 78)
  def _reduce_32(val, _values, result)
     result = SQLParser::Statement::As.new(val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 79)
  def _reduce_33(val, _values, result)
     result = SQLParser::Statement::As.new(val[0], val[1])
    result
  end
.,.,

# reduce 34 omitted

module_eval(<<'.,.,', 'parser.racc', 83)
  def _reduce_35(val, _values, result)
     result = SQLParser::Statement::TableExpression.new(val[0], val[1], val[2], val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 86)
  def _reduce_36(val, _values, result)
     result = SQLParser::Statement::FromClause.new(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 89)
  def _reduce_37(val, _values, result)
     result = SQLParser::Statement::As.new(val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 90)
  def _reduce_38(val, _values, result)
     result = SQLParser::Statement::As.new(val[0], val[1])
    result
  end
.,.,

# reduce 39 omitted

# reduce 40 omitted

# reduce 41 omitted

# reduce 42 omitted

# reduce 43 omitted

module_eval(<<'.,.,', 'parser.racc', 102)
  def _reduce_44(val, _values, result)
     result = SQLParser::Statement::CrossJoin.new(val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 103)
  def _reduce_45(val, _values, result)
     result = SQLParser::Statement::CrossJoin.new(val[0], val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 106)
  def _reduce_46(val, _values, result)
     result = val[1].new(val[0], val[3], val[4])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 109)
  def _reduce_47(val, _values, result)
     result = SQLParser::Statement::InnerJoin
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 110)
  def _reduce_48(val, _values, result)
     result = SQLParser::Statement::LeftOuterJoin
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 111)
  def _reduce_49(val, _values, result)
     result = SQLParser::Statement::LeftJoin
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 112)
  def _reduce_50(val, _values, result)
     result = SQLParser::Statement::RightOuterJoin
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 113)
  def _reduce_51(val, _values, result)
     result = SQLParser::Statement::RightJoin
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 114)
  def _reduce_52(val, _values, result)
     result = SQLParser::Statement::FullJoin
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 115)
  def _reduce_53(val, _values, result)
     result = SQLParser::Statement::FullOuterJoin
    result
  end
.,.,

# reduce 54 omitted

# reduce 55 omitted

module_eval(<<'.,.,', 'parser.racc', 122)
  def _reduce_56(val, _values, result)
     result = SQLParser::Statement::On.new(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 125)
  def _reduce_57(val, _values, result)
     result = SQLParser::Statement::Using.new(val[2])
    result
  end
.,.,

# reduce 58 omitted

# reduce 59 omitted

module_eval(<<'.,.,', 'parser.racc', 132)
  def _reduce_60(val, _values, result)
     result = SQLParser::Statement::WhereClause.new(val[1])
    result
  end
.,.,

# reduce 61 omitted

module_eval(<<'.,.,', 'parser.racc', 136)
  def _reduce_62(val, _values, result)
     result = SQLParser::Statement::GroupByClause.new(val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 139)
  def _reduce_63(val, _values, result)
     result = Array(val[0]) + Array(val[2])
    result
  end
.,.,

# reduce 64 omitted

# reduce 65 omitted

# reduce 66 omitted

module_eval(<<'.,.,', 'parser.racc', 147)
  def _reduce_67(val, _values, result)
     result = SQLParser::Statement::HavingClause.new(val[1])
    result
  end
.,.,

# reduce 68 omitted

module_eval(<<'.,.,', 'parser.racc', 154)
  def _reduce_69(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Between.new(val[0], val[3], val[5]))
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 155)
  def _reduce_70(val, _values, result)
     result = SQLParser::Statement::Between.new(val[0], val[2], val[4])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 158)
  def _reduce_71(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::In.new(val[0], val[3]))
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 159)
  def _reduce_72(val, _values, result)
     result = SQLParser::Statement::In.new(val[0], val[2])
    result
  end
.,.,

# reduce 73 omitted

module_eval(<<'.,.,', 'parser.racc', 163)
  def _reduce_74(val, _values, result)
     result = SQLParser::Statement::InValueList.new(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 166)
  def _reduce_75(val, _values, result)
     result = Array(val[0]) + Array(val[2])
    result
  end
.,.,

# reduce 76 omitted

module_eval(<<'.,.,', 'parser.racc', 173)
  def _reduce_77(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Like.new(val[0], val[3]))
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 174)
  def _reduce_78(val, _values, result)
     result = SQLParser::Statement::Like.new(val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 177)
  def _reduce_79(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Is.new(val[0], SQLParser::Statement::Null.new))
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 178)
  def _reduce_80(val, _values, result)
     result = SQLParser::Statement::Is.new(val[0], SQLParser::Statement::Null.new)
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 181)
  def _reduce_81(val, _values, result)
     result = SQLParser::Statement::Exists.new(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 185)
  def _reduce_82(val, _values, result)
     result = SQLParser::Statement::Table.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 188)
  def _reduce_83(val, _values, result)
     result = Array(val[0]) + Array(val[2])
    result
  end
.,.,

# reduce 84 omitted

# reduce 85 omitted

module_eval(<<'.,.,', 'parser.racc', 194)
  def _reduce_86(val, _values, result)
     result = SQLParser::Statement::Or.new(val[0], val[2])
    result
  end
.,.,

# reduce 87 omitted

module_eval(<<'.,.,', 'parser.racc', 198)
  def _reduce_88(val, _values, result)
     result = SQLParser::Statement::And.new(val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 201)
  def _reduce_89(val, _values, result)
     result = SQLParser::Statement::Not.new(val[1])
    result
  end
.,.,

# reduce 90 omitted

# reduce 91 omitted

# reduce 92 omitted

module_eval(<<'.,.,', 'parser.racc', 209)
  def _reduce_93(val, _values, result)
     result = val[1]
    result
  end
.,.,

# reduce 94 omitted

# reduce 95 omitted

# reduce 96 omitted

# reduce 97 omitted

# reduce 98 omitted

# reduce 99 omitted

module_eval(<<'.,.,', 'parser.racc', 220)
  def _reduce_100(val, _values, result)
     result = SQLParser::Statement::Equals.new(val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 221)
  def _reduce_101(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Equals.new(val[0], val[2]))
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 222)
  def _reduce_102(val, _values, result)
     result = SQLParser::Statement::Less.new(val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 223)
  def _reduce_103(val, _values, result)
     result = SQLParser::Statement::Greater.new(val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 224)
  def _reduce_104(val, _values, result)
     result = SQLParser::Statement::LessOrEquals.new(val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 225)
  def _reduce_105(val, _values, result)
     result = SQLParser::Statement::GreaterOrEquals.new(val[0], val[2])
    result
  end
.,.,

# reduce 106 omitted

# reduce 107 omitted

# reduce 108 omitted

# reduce 109 omitted

# reduce 110 omitted

module_eval(<<'.,.,', 'parser.racc', 239)
  def _reduce_111(val, _values, result)
     result = SQLParser::Statement::Add.new(val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 240)
  def _reduce_112(val, _values, result)
     result = SQLParser::Statement::Subtract.new(val[0], val[2])
    result
  end
.,.,

# reduce 113 omitted

module_eval(<<'.,.,', 'parser.racc', 244)
  def _reduce_114(val, _values, result)
     result = SQLParser::Statement::Multiply.new(val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 245)
  def _reduce_115(val, _values, result)
     result = SQLParser::Statement::Divide.new(val[0], val[2])
    result
  end
.,.,

# reduce 116 omitted

module_eval(<<'.,.,', 'parser.racc', 249)
  def _reduce_117(val, _values, result)
     result = val[0].new(val[1])
    result
  end
.,.,

# reduce 118 omitted

# reduce 119 omitted

# reduce 120 omitted

# reduce 121 omitted

module_eval(<<'.,.,', 'parser.racc', 256)
  def _reduce_122(val, _values, result)
     result = val[1]
    result
  end
.,.,

# reduce 123 omitted

# reduce 124 omitted

# reduce 125 omitted

# reduce 126 omitted

module_eval(<<'.,.,', 'parser.racc', 267)
  def _reduce_127(val, _values, result)
     result = SQLParser::Statement::CurrentUser.new
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 270)
  def _reduce_128(val, _values, result)
     result = SQLParser::Statement::QualifiedColumn.new(val[0], val[2])
    result
  end
.,.,

# reduce 129 omitted

# reduce 130 omitted

module_eval(<<'.,.,', 'parser.racc', 277)
  def _reduce_131(val, _values, result)
     result = SQLParser::Statement::Count.new(SQLParser::Statement::All.new)
    result
  end
.,.,

# reduce 132 omitted

module_eval(<<'.,.,', 'parser.racc', 281)
  def _reduce_133(val, _values, result)
     result = SQLParser::Statement::Count.new(val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 282)
  def _reduce_134(val, _values, result)
     result = SQLParser::Statement::Average.new(val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 283)
  def _reduce_135(val, _values, result)
     result = SQLParser::Statement::Maximum.new(val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 284)
  def _reduce_136(val, _values, result)
     result = SQLParser::Statement::Minimum.new(val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 285)
  def _reduce_137(val, _values, result)
     result = SQLParser::Statement::Sum.new(val[2])
    result
  end
.,.,

# reduce 138 omitted

# reduce 139 omitted

module_eval(<<'.,.,', 'parser.racc', 293)
  def _reduce_140(val, _values, result)
     result = SQLParser::Statement::Float.new("#{val[0]}.#{val[2]}".to_f)
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 294)
  def _reduce_141(val, _values, result)
     result = SQLParser::Statement::Float.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 295)
  def _reduce_142(val, _values, result)
     result = SQLParser::Statement::Float.new("0.#{val[1]}".to_f)
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 296)
  def _reduce_143(val, _values, result)
     result = SQLParser::Statement::Integer.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 299)
  def _reduce_144(val, _values, result)
     result = SQLParser::Statement::ApproximateFloat.new(val[0], val[2])
    result
  end
.,.,

# reduce 145 omitted

# reduce 146 omitted

module_eval(<<'.,.,', 'parser.racc', 308)
  def _reduce_147(val, _values, result)
     result = val[0].new(SQLParser::Statement::Integer.new(val[1]))
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 309)
  def _reduce_148(val, _values, result)
     result = SQLParser::Statement::Integer.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 312)
  def _reduce_149(val, _values, result)
     result = SQLParser::Statement::UnaryPlus
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 313)
  def _reduce_150(val, _values, result)
     result = SQLParser::Statement::UnaryMinus
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 317)
  def _reduce_151(val, _values, result)
     result = SQLParser::Statement::Column.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 321)
  def _reduce_152(val, _values, result)
     result = SQLParser::Statement::String.new(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 322)
  def _reduce_153(val, _values, result)
     result = SQLParser::Statement::String.new('')
    result
  end
.,.,

# reduce 154 omitted

# reduce 155 omitted

module_eval(<<'.,.,', 'parser.racc', 329)
  def _reduce_156(val, _values, result)
     result = SQLParser::Statement::Date.new(val[1])
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
end   # module SQLParser
